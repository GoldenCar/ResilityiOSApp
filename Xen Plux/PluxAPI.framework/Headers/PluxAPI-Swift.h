// Generated by Apple Swift version 2.2 (swiftlang-703.0.18.8 clang-703.0.31)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if defined(__has_feature) && __has_feature(modules)
@import CoreBluetooth;
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"

@interface CBCharacteristic (SWIFT_EXTENSION(PluxAPI))
@end


@interface CBPeripheral (SWIFT_EXTENSION(PluxAPI))
@end


@interface NSData (SWIFT_EXTENSION(PluxAPI))
@end

@protocol PXBioPluxManagerDelegate;
enum PXLogLevel : NSInteger;
@class PXDevice;
@class CBCentralManager;
@class NSNumber;
@class NSError;

SWIFT_CLASS("_TtC7PluxAPI16PXBioPluxManager")
@interface PXBioPluxManager : NSObject <CBCentralManagerDelegate>
@property (nonatomic, strong) id <PXBioPluxManagerDelegate> _Nullable delegate;
@property (nonatomic) enum PXLogLevel logLevel;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)scanDevices;
- (void)stopScanDevices;
- (void)connectDevice:(PXDevice * _Nonnull)device;
- (void)disconnectDevice:(PXDevice * _Nonnull)device;
- (void)centralManagerDidUpdateState:(CBCentralManager * _Nonnull)central;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDiscoverPeripheral:(CBPeripheral * _Nonnull)peripheral advertisementData:(NSDictionary<NSString *, id> * _Nonnull)advertisementData RSSI:(NSNumber * _Nonnull)RSSI;
- (void)centralManager:(CBCentralManager * _Nonnull)central didConnectPeripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDisconnectPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)centralManager:(CBCentralManager * _Nonnull)central didFailToConnectPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
@end


SWIFT_PROTOCOL("_TtP7PluxAPI24PXBioPluxManagerDelegate_")
@protocol PXBioPluxManagerDelegate <NSObject>
@optional
- (void)didDiscoverNewDevice:(PXDevice * _Nonnull)device;
- (void)didConnectDevice;
- (void)didFailToConnectDevice;
- (void)didDisconnectDevice;
- (void)didBluetoothPoweredOff;
- (void)didBluetoothPoweredOn;
@end

@class PXSource;
@class PXPluxFrame;
@class PXPluxDevice;
@class CBService;
@class CBDescriptor;

SWIFT_CLASS("_TtC7PluxAPI8PXDevice")
@interface PXDevice : NSObject <CBPeripheralDelegate>
@property (nonatomic, readonly, copy) NSString * _Nonnull deviceName;
@property (nonatomic, readonly, copy) NSString * _Nonnull deviceUUID;
- (nonnull instancetype)initWithDeviceName:(NSString * _Nonnull)deviceName deviceUUID:(NSString * _Nonnull)deviceUUID peripheral:(CBPeripheral * _Nonnull)peripheral OBJC_DESIGNATED_INITIALIZER;
- (void)startAcquisitionWithBaseFrequency:(float)baseFrequency sourcesArray:(NSArray<PXSource *> * _Nonnull)sourcesArray completionBlock:(void (^ _Nullable)(BOOL result, PXPluxFrame * _Nullable pluxFrame))completionBlock;
- (void)stopAcquisitionWithCompletionBlock:(void (^ _Nullable)(BOOL result))completionBlock;
- (void)getVersionOfDeviceWithCompletionBlock:(void (^ _Nullable)(BOOL result, PXPluxDevice * _Nullable pluxDevice))completionBlock;
- (void)getDescriptionOfDeviceWithCompletionBlock:(void (^ _Nullable)(BOOL result, NSString * _Nullable description))completionBlock;
- (void)resetDevice;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverServices:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverCharacteristicsForService:(CBService * _Nonnull)service error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didWriteValueForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didUpdateValueForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverDescriptorsForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didWriteValueForDescriptor:(CBDescriptor * _Nonnull)descriptor error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didUpdateValueForDescriptor:(CBDescriptor * _Nonnull)descriptor error:(NSError * _Nullable)error;
@end

typedef SWIFT_ENUM(NSInteger, PXLogLevel) {
  PXLogLevelNone = 0,
  PXLogLevelSimple = 1,
};


SWIFT_CLASS("_TtC7PluxAPI12PXPluxDevice")
@interface PXPluxDevice : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


@interface PXPluxDevice (SWIFT_EXTENSION(PluxAPI))
@end


SWIFT_CLASS("_TtC7PluxAPI11PXPluxFrame")
@interface PXPluxFrame : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull identifier;
@property (nonatomic, readonly) NSInteger sequence;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nonnull analogData;
@property (nonatomic, readonly) NSInteger digitalInput;
@property (nonatomic, readonly, copy) NSString * _Nonnull comments;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


@interface PXPluxFrame (SWIFT_EXTENSION(PluxAPI))
@end


SWIFT_CLASS("_TtC7PluxAPI8PXSource")
@interface PXSource : NSObject
@property (nonatomic) NSInteger port;
@property (nonatomic) NSInteger numberOfBits;
@property (nonatomic) uint8_t channelMask;
@property (nonatomic) NSInteger frequencyDivisor;
- (nonnull instancetype)initWithPort:(NSInteger)port numberOfBits:(NSInteger)numberOfBits channelMask:(uint8_t)channelMask frequencyDivisor:(NSInteger)frequencyDivisor OBJC_DESIGNATED_INITIALIZER;
@end

#pragma clang diagnostic pop
